{"prompt": "The content of the Markdown is a scientific paper about copolymerization of monomers. We only consider\n copolymerizations with 2 different monomers. If you find a polymerization with just one or more than 2\n monomers ignore them. Its possible, that there is also the beginning of a new paper about polymers in\n the PDF. Ignore these. In each paper there could be multiple different reaction with different pairs of monomers and same reactions with different\n reaction conditions. The reaction constants for the copolymerization with the monomer pair is the most\n important information. Be careful with numbers and do not miss the decimal points.\n If there are polymerization's without these constants, ignore these.\n From the PDF, extract the polymerization information from each polymerization and report it in valid json format. \n Don't use any abbreviations, always use the whole word.\n Try to keep the string short. Exclude comments out of the json output. Return one json object. Stick to the\n given output datatype (string, or float).\n\n Extract the following information:\n\n    reactions: [\n    {\n    \"monomers\": [\"Monomer 1\", \"Monomer 2\"] as STRING (only the whole Monomer name without abbreviation)\n    \"reaction_conditions\": [\n    {\n        \"polymerization_type\": polymerization reaction type (free radical, anionic, cationic, ...) as STRING,\n        \"solvent\": used solvent for the polymerization reaction as STRING (whole name without\n                abbreviation, just name no further details); if the solvent is water put just \"water\"; ,\n        \"method\": used polymerization method (solvent, bulk, emulsion...) as STRING,\n        \"temperature\": used polymerization temperature as FLOAT ,\n        \"temperature_unit\": unit of temperature (\u00b0C, \u00b0F, ...) as STRING,\n        \"reaction_constants\": { polymerization reaction constants r1 and r2 as FLOAT,\n        \"constant_1\":\n        \"constant_2\": },\n        \"reaction_constant_conf\": { confidence interval of polymerization reaction constant r1 and r2 as FLOAT\n        \"constant_conf_1\":\n        \"constant_conf_2\": },\n        \"determination_method\": method for determination of the r-values (Kelen-Tudor, ...) as STRING\n    },\n    {\n        \"polymerization_type\":\n        \"solvent\":\n        ...\n        }\n    ]\n    },\n    {\n    \"monomers\":\n    \"reaction_condition\": [\n    { ... }\n    ]\n    }\n    \"source\": doi url or source as STRING (just one source)\n    \"PDF_name\": name of the pdf document\n    ]\n\n\n    If the information is not provided put null. If there are multiple polymerization's with different\n    parameters report as a separate reaction (for different pairs of monomers) and reaction_conditions(for\n    different reaction conditions of the same monomers).", "prompt_addition": "Here is the previously collected data from the same Markdowns: {}. Try to fill up the \n        entries with NA and correct entries if they are wrong. Pay particular attention on numbers and at the decimal point. Combine different reaction if they belong to the same \n        polymerization with the same reaction conditions. Report every different polymerization and every different \n        reaction condition separately. Do this based on this prompt:", "parsing-error": 0, "parsing-error-rate": 0.0, "number of empty entries": 47, "rate of empty entries": 12.176165803108809, "correct reaction count": 29, "correct-reaction-rate": 87.87878787878788, "matching-monomer-error": 1, "matching-monomer-error-rate": 4.545454545454546, "reaction-number-error": 1, "reaction-number-error-rate": 95.45454545454545, "reaction_conditions-error": 1, "reaction_conditions-number-error-rate": 96.96969696969697, "reaction-constant-NA-count": 0, "reaction-const-NA-rate": 0.0, "reaction-const-conf-NA-rate": 6.25, "reaction-const-conf-NA-count": 2, "fuzzy matching score": 0.7328125, "mse reaction const": 0.03096665140625, "mse reaction const conf": 5.2083333333333343e-05, "mse temperature": 0.0, "solvent error": 16, "solvent error rate": 48.484848484848484, "_timestamp": 1713186550.608365, "_runtime": 5.193775177001953, "_step": 0, "_wandb": {"runtime": 3}}